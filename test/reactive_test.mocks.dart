// Mocks generated by Mockito 5.4.4 from annotations
// in youapp/test/reactive_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i5;

import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:youapp/getx/reactive_controller.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRxString_0 extends _i1.SmartFake implements _i2.RxString {
  _FakeRxString_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxInt_1 extends _i1.SmartFake implements _i2.RxInt {
  _FakeRxInt_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_2<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_3<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReactiveController].
///
/// See the documentation for Mockito's code generation for more information.
class MockReactiveController extends _i1.Mock
    implements _i3.ReactiveController {
  MockReactiveController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RxString get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#email),
        ),
      ) as _i2.RxString);

  @override
  set email(_i2.RxString? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get username => (super.noSuchMethod(
        Invocation.getter(#username),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#username),
        ),
      ) as _i2.RxString);

  @override
  set username(_i2.RxString? _username) => super.noSuchMethod(
        Invocation.setter(
          #username,
          _username,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#password),
        ),
      ) as _i2.RxString);

  @override
  set password(_i2.RxString? _password) => super.noSuchMethod(
        Invocation.setter(
          #password,
          _password,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get retype => (super.noSuchMethod(
        Invocation.getter(#retype),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#retype),
        ),
      ) as _i2.RxString);

  @override
  set retype(_i2.RxString? _retype) => super.noSuchMethod(
        Invocation.setter(
          #retype,
          _retype,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#token),
        ),
      ) as _i2.RxString);

  @override
  set token(_i2.RxString? _token) => super.noSuchMethod(
        Invocation.setter(
          #token,
          _token,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get selectedBirthday => (super.noSuchMethod(
        Invocation.getter(#selectedBirthday),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#selectedBirthday),
        ),
      ) as _i2.RxString);

  @override
  set selectedBirthday(_i2.RxString? _selectedBirthday) => super.noSuchMethod(
        Invocation.setter(
          #selectedBirthday,
          _selectedBirthday,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get selectedName => (super.noSuchMethod(
        Invocation.getter(#selectedName),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#selectedName),
        ),
      ) as _i2.RxString);

  @override
  set selectedName(_i2.RxString? _selectedName) => super.noSuchMethod(
        Invocation.setter(
          #selectedName,
          _selectedName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get selectedGender => (super.noSuchMethod(
        Invocation.getter(#selectedGender),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#selectedGender),
        ),
      ) as _i2.RxString);

  @override
  set selectedGender(_i2.RxString? _selectedGender) => super.noSuchMethod(
        Invocation.setter(
          #selectedGender,
          _selectedGender,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get selectedHeight => (super.noSuchMethod(
        Invocation.getter(#selectedHeight),
        returnValue: _FakeRxInt_1(
          this,
          Invocation.getter(#selectedHeight),
        ),
      ) as _i2.RxInt);

  @override
  set selectedHeight(_i2.RxInt? _selectedHeight) => super.noSuchMethod(
        Invocation.setter(
          #selectedHeight,
          _selectedHeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get selectedWeight => (super.noSuchMethod(
        Invocation.getter(#selectedWeight),
        returnValue: _FakeRxInt_1(
          this,
          Invocation.getter(#selectedWeight),
        ),
      ) as _i2.RxInt);

  @override
  set selectedWeight(_i2.RxInt? _selectedWeight) => super.noSuchMethod(
        Invocation.setter(
          #selectedWeight,
          _selectedWeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get selectedHoroscope => (super.noSuchMethod(
        Invocation.getter(#selectedHoroscope),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#selectedHoroscope),
        ),
      ) as _i2.RxString);

  @override
  set selectedHoroscope(_i2.RxString? _selectedHoroscope) => super.noSuchMethod(
        Invocation.setter(
          #selectedHoroscope,
          _selectedHoroscope,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get selectedZodiac => (super.noSuchMethod(
        Invocation.getter(#selectedZodiac),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#selectedZodiac),
        ),
      ) as _i2.RxString);

  @override
  set selectedZodiac(_i2.RxString? _selectedZodiac) => super.noSuchMethod(
        Invocation.setter(
          #selectedZodiac,
          _selectedZodiac,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get profileImage => (super.noSuchMethod(
        Invocation.getter(#profileImage),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#profileImage),
        ),
      ) as _i2.RxString);

  @override
  set profileImage(_i2.RxString? _profileImage) => super.noSuchMethod(
        Invocation.setter(
          #profileImage,
          _profileImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get selectedInterest => (super.noSuchMethod(
        Invocation.getter(#selectedInterest),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#selectedInterest),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set selectedInterest(_i2.RxList<dynamic>? _selectedInterest) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedInterest,
          _selectedInterest,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get pickedImage => (super.noSuchMethod(
        Invocation.getter(#pickedImage),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#pickedImage),
        ),
      ) as _i2.RxString);

  @override
  set pickedImage(_i2.RxString? _pickedImage) => super.noSuchMethod(
        Invocation.setter(
          #pickedImage,
          _pickedImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_3<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_3<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void setEmail(String? newEmail) => super.noSuchMethod(
        Invocation.method(
          #setEmail,
          [newEmail],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setUsername(String? newUsername) => super.noSuchMethod(
        Invocation.method(
          #setUsername,
          [newUsername],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPassword(String? newPassword) => super.noSuchMethod(
        Invocation.method(
          #setPassword,
          [newPassword],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setRetype(String? newRetype) => super.noSuchMethod(
        Invocation.method(
          #setRetype,
          [newRetype],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setToken(String? newToken) => super.noSuchMethod(
        Invocation.method(
          #setToken,
          [newToken],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateBirthday(String? newBirthday) => super.noSuchMethod(
        Invocation.method(
          #updateBirthday,
          [newBirthday],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateName(String? newName) => super.noSuchMethod(
        Invocation.method(
          #updateName,
          [newName],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateGender(String? newGender) => super.noSuchMethod(
        Invocation.method(
          #updateGender,
          [newGender],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateHeight(int? newHeight) => super.noSuchMethod(
        Invocation.method(
          #updateHeight,
          [newHeight],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateWeight(int? newWeight) => super.noSuchMethod(
        Invocation.method(
          #updateWeight,
          [newWeight],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateHoroscope(String? newHoroscope) => super.noSuchMethod(
        Invocation.method(
          #updateHoroscope,
          [newHoroscope],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateZodiac(String? newZodiac) => super.noSuchMethod(
        Invocation.method(
          #updateZodiac,
          [newZodiac],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateProfileImage(String? newImage) => super.noSuchMethod(
        Invocation.method(
          #updateProfileImage,
          [newImage],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateInterest(List<String>? newInterest) => super.noSuchMethod(
        Invocation.method(
          #updateInterest,
          [newInterest],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateImage(String? newImage) => super.noSuchMethod(
        Invocation.method(
          #updateImage,
          [newImage],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Disposer addListener(_i4.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i4.Disposer);

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i5.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Disposer addListenerId(
    Object? key,
    _i4.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i4.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
